name: cd

on:
  push:
    branches:
      - dev

env:
  NEXT_PUBLIC_API_URL: https://apidev.klinikmajja.com
  NEXT_PUBLIC_AWSENDPOINT: https://paymentdev.klinikmajja.com
  NEXT_PUBLIC_DATABASE_HOST: dev_mysql_container
  NEXT_PUBLIC_DATABASE_PORT: 3306
  NEXT_PUBLIC_MYSQL_DATABASE: majja_db
  NEXT_PUBLIC_MYSQL_USER: majja_user
  NEXT_PUBLIC_MYSQL_PASSWORD: majja_dev_db_3124535

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: 203.161.53.80
        username: root
        password: Majj@clinic2023
        port: 22
        script: |
            cd ~/frontend/dev/majja
            git pull origin dev
            git status

            # Menghapus file next.zip jika sudah ada
            if [ -f next.zip ]; then
              rm next.zip
            fi

            # Menghapus folder .next jika sudah ada
            if [ -d .next ]; then
              rm -rf .next
            fi

            # Menyalin file next.zip dari /root/fe_build/dev ke direktori saat ini
            sudo cp /root/fe_build/dev/next.zip .

            # Mengekstrak isi next.zip ke dalam folder .next
            unzip next.zip -d .next

            rm -f  .env
            touch .env
            echo NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }} >> .env
            echo NEXT_PUBLIC_AWSENDPOINT=${{ env.NEXT_PUBLIC_AWSENDPOINT }} >> .env
            echo NEXT_PUBLIC_DATABASE_HOST=${{ env.NEXT_PUBLIC_DATABASE_HOST }} >> .env
            echo NEXT_PUBLIC_DATABASE_PORT=${{ env.NEXT_PUBLIC_DATABASE_PORT }} >> .env
            echo NEXT_PUBLIC_MYSQL_DATABASE=${{ env.NEXT_PUBLIC_MYSQL_DATABASE }} >> .env
            echo NEXT_PUBLIC_MYSQL_USER=${{ env.NEXT_PUBLIC_MYSQL_USER }} >> .env
            echo NEXT_PUBLIC_MYSQL_PASSWORD=${{ env.NEXT_PUBLIC_MYSQL_PASSWORD }} >> .env
            
            echo "cat .env"
            cat .env

            sudo docker rm frontend_container_dev -f
            sudo docker rmi frontend_dev

            sudo docker build --no-cache -t frontend_dev .
            sudo docker run --name frontend_container_dev \
            --restart always \
            --network containers_lan \
            -p 3000:3000 \
            -e NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }} \
            -e NEXT_PUBLIC_AWSENDPOINT=${{ env.NEXT_PUBLIC_AWSENDPOINT }} \
            -e NEXT_PUBLIC_DATABASE_HOST=${{ env.NEXT_PUBLIC_DATABASE_HOST }} \
            -e NEXT_PUBLIC_DATABASE_PORT=${{ env.NEXT_PUBLIC_DATABASE_PORT }} \
            -e NEXT_PUBLIC_MYSQL_DATABASE=${{ env.NEXT_PUBLIC_MYSQL_DATABASE }} \
            -e NEXT_PUBLIC_MYSQL_USER=${{ env.NEXT_PUBLIC_MYSQL_USER }} \
            -e NEXT_PUBLIC_MYSQL_PASSWORD=${{ env.NEXT_PUBLIC_MYSQL_PASSWORD }} \
            -d frontend_dev

            sudo docker builder prune -f